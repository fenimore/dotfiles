#!/usr/bin/env python
"""
A dirty LDIF parser.

Because there doesn't seem to be a decent, easily accessible existing one.
"""

from collections import defaultdict
import itertools
import json
import sys


def main(infile=sys.stdin, outfile=sys.stdout):
    for record in _records(infile):
        json.dump(record, sys.stdout, sort_keys=True)


def _records(lines):
    current = defaultdict(list)
    for line in lines:
        line = line.strip()
        if line.startswith("#"):
            continue
        elif not line:
            if current:
                yield _unboxed(current)
                current = defaultdict(list)
            continue

        label, found, b64value = line.partition(":: ")
        if not found:
            label, _, value = line.partition(": ")
        else:
            value = {"base64": b64value}
        current[label].append(value)
    if current:
        yield _unboxed(current)


def _unboxed(record):
    return {k: v[0] if len(v) == 1 else v for k, v in record.iteritems()}


if __name__ == "__main__":
    main()
